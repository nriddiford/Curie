for (f in levels(data$feature)) {
cat("feature:", f, "count:", classes_count[f], "\n")
val<-genome_features$f
val
}
for (f in levels(data$feature)) {
cat("feature:", f, "count:", classes_count[f], "\n")
val<-genome_features$f
val
}
head(genome_features)
source('~/Desktop/script_test/SV_Parser/script/plotBPs.r')
source('~/Desktop/script_test/SV_Parser/script/plotBPs.r')
split(genome_features, list(genome_features$feature, genome_features$length))
source('~/Desktop/script_test/SV_Parser/script/plotBPs.r')
source('~/Desktop/script_test/SV_Parser/script/plotBPs.r')
class_lengths<-split(genome_features, list(genome_features$feature, genome_features$length))
for (f in levels(data$feature)) {
cat("feature:", f, "count:", classes_count[f], class_lengths[f], "\n")
}
typeof(class_lengths)
typeof(class_lengths)
source('~/Desktop/script_test/SV_Parser/script/plotBPs.r')
typeof(class_lengths)
for (f in levels(data$feature)) {
cat("feature:", f, "count:", classes_count[f], class_lengths[f], "\n")
}
typeof(class_lengths)
for (f in levels(data$feature)) {
cat("feature:", f, "count:", classes_count[f], class_lengths[f], "\n")
}
class_lengths<-split(genome_features, list(genome_features$feature, genome_features$length))
class_lengths
karyotype
source('~/Desktop/script_test/SV_Parser/script/plotBPs.r')
class_lengths<-split(genome_features, list(feature, length))
class_lengths<-split(genome_features, list(feature, length))
source('~/Desktop/script_test/SV_Parser/script/plotBPs.r')
class_lengths<-split(genome_features, list(genome_features$feature, genome_features$length))
class_lengths$feature$INV
class_lengths$feature$exon
class_lengths$feature
class_lengths$features
genome_features
list(genome_features$feature, genome_features$length)
class_lengths<-list(genome_features$feature, genome_features$length)
class_lengths
class_lengths[exon]
class_lengths[[exon]
class_lengths[[exon]]
class_lengths$exon
class_lengths[exon]
plot_all_chroms_grid(notch=1)
bp_features()
bp_features(notch=1)
data$feature<-as.factor(gsub("_.*", "", data$feature))
classes_count<-table(data$feature)
class_lengths<-split(genome_features, list(genome_features$feature, genome_features$length))
for (f in levels(data$feature)) {
cat("feature:", f, "count:", classes_count[f], class_lengths[f], "\n")
}
class_lengths<-split(genome_features, list(genome_features$feature, genome_features$length))
class_lengths
list(genome_features$feature, genome_features$length)
karyotype<-setNames(as.list(genome_features$length), genome_features$feature)
karyotype
source('~/Desktop/script_test/SV_Parser/script/plotBPs.r')
classes_count<-table(data$feature)
class_lengths<-setNames(as.list(genome_features$length), genome_features$feature)
for (f in levels(data$feature)) {
cat("feature:", f, "count:", classes_count[f], class_lengths[f], "\n")
}
karyotype<-setNames(as.list(lengths), chromosomes)
source('~/Desktop/script_test/SV_Parser/script/plotBPs.r')
source('~/Desktop/script_test/SV_Parser/script/plotBPs.r')
for (f in levels(data$feature)) {
cat("feature:", f, "count:", classes_count[f], class_lengths[[f]], "\n")
}
genome(features)
genome_features
source('~/Desktop/script_test/SV_Parser/script/plotBPs.r')
source('~/Desktop/script_test/SV_Parser/script/plotBPs.r')
genome_features<-read.delim('genome_features.txt', header = T)
data<-get_data()
breakpoint_count<-nrow(data)
data$feature<-as.factor(gsub("_.*", "", data$feature))
classes_count<-table(data$feature)
class_lengths<-setNames(as.list(genome_features$length), genome_features$feature)
for (f in levels(data$feature)) {
fraction_of_g<-breakpoint_count*(class_lengths[[f]]/137547960)
cat("feature:", f, "count:", classes_count[f], "length:", class_lengths[[f]], "fraction of genome:", fraction_of_g, "\n")
}
30095000/137547960
source('~/Desktop/script_test/SV_Parser/script/plotBPs.r')
source('~/Desktop/script_test/SV_Parser/script/plotBPs.r')
for (f in levels(data$feature)) {
feature_fraction<-class_lengths[[f]]/137547960
feature_expect<-breakpoint_count*(class_lengths[[f]]/137547960)
cat("feature:", f, "count:", classes_count[f], "length:", class_lengths[[f]], "fraction of genome:", feature_fraction, "\n")
}
source('~/Desktop/script_test/SV_Parser/script/plotBPs.r')
for (f in levels(data$feature)) {
feature_fraction<-class_lengths[[f]]/137547960
feature_expect<-breakpoint_count*(class_lengths[[f]]/137547960)
cat(f, "count:", classes_count[f], "length:", class_lengths[[f]], "fraction of genome:", feature_fraction, "\n")
}
for (f in levels(data$feature)) {
feature_fraction<-class_lengths[[f]]/137547960
feature_expect<-breakpoint_count*(class_lengths[[f]]/137547960)
cat(f, "count:", classes_count[f], "length:", class_lengths[[f]], "fraction of genome:", feature_fraction, "\n")
}
source('~/Desktop/script_test/SV_Parser/script/plotBPs.r')
source('~/Desktop/script_test/SV_Parser/script/plotBPs.r')
source('~/Desktop/script_test/SV_Parser/script/plotBPs.r')
source('~/Desktop/script_test/SV_Parser/script/plotBPs.r')
source('~/Desktop/script_test/SV_Parser/script/plotBPs.r')
for (f in levels(data$feature)) {
feature_fraction<-class_lengths[[f]]/137547960
feature_expect<-breakpoint_count*(class_lengths[[f]]/137547960)
cat(f, "=", feature_fraction, "fraction of genome", "\n")
}
source('~/Desktop/script_test/SV_Parser/script/plotBPs.r')
for (f in levels(data$feature)) {
feature_fraction<-class_lengths[[f]]/137547960
feature_expect<-breakpoint_count*(class_lengths[[f]]/137547960)
cat(f, "=", feature_fraction, "fraction of genome", "\n")
cat(feature_expect, "\n")
}
source('~/Desktop/script_test/SV_Parser/script/plotBPs.r')
for (f in levels(data$feature)) {
feature_fraction<-class_lengths[[f]]/137547960
feature_expect<-breakpoint_count*(class_lengths[[f]]/137547960)
cat(f, "=", feature_fraction, "fraction of genome", "\n")
binom.test(x=classes_count[f],breakpoint_count,p = feature_fraction ,alternative = "greater")
}
classes_count[exon]
classes_count[exon]
classes_count
classes_count$exon
classes_count['exon']
breakpoint_count
feature_fraction
feature_fraction<-class_lengths[[exon]]/137547960
feature_fraction<-class_lengths[['exon']]/137547960
st=classes_count['exon']
binom.test(st,breakpoint_count,p=feature_fraction, alternative = "greater")
source('~/Desktop/script_test/SV_Parser/script/plotBPs.r')
source('~/Desktop/script_test/SV_Parser/script/plotBPs.r')
source('~/Desktop/script_test/SV_Parser/script/plotBPs.r')
source('~/Desktop/script_test/SV_Parser/script/plotBPs.r')
for (f in levels(data$feature)) {
feature_fraction<-class_lengths[[f]]/137547960
feature_expect<-breakpoint_count*(class_lengths[[f]]/137547960)
cat(f, "=", feature_fraction, "fraction of genome", "\n")
binom.test(x = classes_count[f], n = breakpoint_count, p = feature_fraction, alternative = "greater")
}
classes_count<-table(data$feature)
classes_count
class_lengths<-setNames(as.list(genome_features$length), genome_features$feature)
class_lengths
source('~/Desktop/script_test/SV_Parser/script/plotBPs.r')
source('~/Desktop/script_test/SV_Parser/script/plotBPs.r')
source('~/Desktop/script_test/SV_Parser/script/plotBPs.r')
for (f in levels(data$feature)) {
feature_fraction<-class_lengths[[f]]/137547960
feature_expect<-breakpoint_count*(class_lengths[[f]]/137547960)
cat(f, "=", feature_fraction, "fraction of genome", "\n")
if(data$class_lengths[[f]]){
binom.test(x = classes_count[f], n = breakpoint_count, p = feature_fraction, alternative = "greater")
}
}
source('~/Desktop/script_test/SV_Parser/script/plotBPs.r')
source('~/Desktop/script_test/SV_Parser/script/plotBPs.r')
for (f in levels(data$feature)) {
feature_fraction<-class_lengths[[f]]/137547960
feature_expect<-breakpoint_count*(class_lengths[[f]]/137547960)
cat(f, "=", feature_fraction, "fraction of genome", "\n")
if(data$get(class_lengths[[f]])){
binom.test(x = classes_count[f], n = breakpoint_count, p = feature_fraction, alternative = "greater")
}
}
source('~/Desktop/script_test/SV_Parser/script/plotBPs.r')
for (f in levels(data$feature)) {
feature_fraction<-class_lengths[[f]]/137547960
feature_expect<-breakpoint_count*(class_lengths[[f]]/137547960)
cat(f, "=", feature_fraction, "fraction of genome", "\n")
if(class_lengths[[f]]){
binom.test(x = classes_count[f], n = breakpoint_count, p = feature_fraction, alternative = "greater")
}}
source('~/Desktop/script_test/SV_Parser/script/plotBPs.r')
source('~/Desktop/script_test/SV_Parser/script/plotBPs.r')
for (f in levels(data$feature)) {
feature_fraction<-class_lengths[[f]]/137547960
feature_expect<-breakpoint_count*(class_lengths[[f]]/137547960)
cat(f, "=", feature_fraction, "fraction of genome", "\n")
if(!is.na(class_lengths[[f]])){
binom.test(x = classes_count[f], n = breakpoint_count, p = feature_fraction, alternative = "greater")
}}
source('~/Desktop/script_test/SV_Parser/script/plotBPs.r')
for (f in levels(data$feature)) {
feature_fraction<-class_lengths[[f]]/137547960
feature_expect<-breakpoint_count*(class_lengths[[f]]/137547960)
cat(f, "=", feature_fraction, "fraction of genome", "\n")
if(!is.null(class_lengths[[f]])){
binom.test(x = classes_count[f], n = breakpoint_count, p = feature_fraction, alternative = "greater")
}}
source('~/Desktop/script_test/SV_Parser/script/plotBPs.r')
source('~/Desktop/script_test/SV_Parser/script/plotBPs.r')
source('~/Desktop/script_test/SV_Parser/script/plotBPs.r')
source('~/Desktop/script_test/SV_Parser/script/plotBPs.r')
for (f in levels(data$feature)) {
feature_fraction<-class_lengths[[f]]/137547960
feature_expect<-breakpoint_count*(class_lengths[[f]]/137547960)
cat(f, "=", feature_fraction, "fraction of genome", "\n")
if(!is.null(class_lengths[[f]])){
test<-binom.test(x = classes_count[f], n = breakpoint_count, p = feature_fraction, alternative = "greater")
test$p.value
}
}
source('~/Desktop/script_test/SV_Parser/script/plotBPs.r')
for (f in levels(data$feature)) {
feature_fraction<-class_lengths[[f]]/137547960
feature_expect<-breakpoint_count*(class_lengths[[f]]/137547960)
cat(f, "=", feature_fraction, "fraction of genome", "\n")
if(!is.null(class_lengths[[f]])){
test<-binom.test(x = classes_count[f], n = breakpoint_count, p = feature_fraction, alternative = "greater")
cat(test$p.value, "\n")
}
}
source('~/Desktop/script_test/SV_Parser/script/plotBPs.r')
source('~/Desktop/script_test/SV_Parser/script/plotBPs.r')
for (f in levels(data$feature)) {
feature_fraction<-class_lengths[[f]]/137547960
feature_expect<-breakpoint_count*(class_lengths[[f]]/137547960)
cat(f, "=", feature_fraction, "fraction of genome", "\n")
if(!is.null(class_lengths[[f]])){
test<-binom.test(x = classes_count[f], n = breakpoint_count, p = feature_fraction, alternative = "greater")
if(test$p.value< 0.05){
cat("Feature", f, "is enriched in breakpoint data: p =", test$p.value, "\n")
}
}
}
source('~/Desktop/script_test/SV_Parser/script/plotBPs.r')
source('~/Desktop/script_test/SV_Parser/script/plotBPs.r')
for (f in levels(data$feature)) {
feature_fraction<-class_lengths[[f]]/137547960
feature_expect<-breakpoint_count*(class_lengths[[f]]/137547960)
cat(f, "=", feature_fraction, "fraction of genome", "\n")
if(!is.null(class_lengths[[f]])){
test<-binom.test(x = classes_count[f], n = breakpoint_count, p = feature_fraction, alternative = "greater")
if(test$p.value < 0.05){
cat("Feature", f, "is enriched in breakpoint data: p =", test$p.value, "\n")
}
else{
cat("Feature", f, "is NOT enriched in breakpoint data: p =", test$p.value, "\n")
}
}
}
source('~/Desktop/script_test/SV_Parser/script/plotBPs.r')
source('~/Desktop/script_test/SV_Parser/script/plotBPs.r')
source('~/Desktop/script_test/SV_Parser/script/plotBPs.r')
for (f in levels(data$feature)) {
feature_fraction<-class_lengths[[f]]/137547960
feature_expect<-breakpoint_count*(class_lengths[[f]]/137547960)
cat(f, "observed:", classes_count, "expected:", feature_expect, "\n")
if(!is.null(class_lengths[[f]])){
test<-binom.test(x = classes_count[f], n = breakpoint_count, p = feature_fraction, alternative = "greater")
if(test$p.value < 0.05){
cat("Feature", f, "is enriched in breakpoint data: p =", test$p.value, "\n")
}
else{
cat("Feature", f, "is NOT enriched in breakpoint data: p =", test$p.value, "\n")
}
}
}
source('~/Desktop/script_test/SV_Parser/script/plotBPs.r')
for (f in levels(data$feature)) {
feature_fraction<-class_lengths[[f]]/137547960
feature_expect<-breakpoint_count*(class_lengths[[f]]/137547960)
cat(f, "observed:", classes_count[f], "expected:", feature_expect, "\n")
if(!is.null(class_lengths[[f]])){
test<-binom.test(x = classes_count[f], n = breakpoint_count, p = feature_fraction, alternative = "greater")
if(test$p.value < 0.05){
cat("Feature", f, "is enriched in breakpoint data: p =", test$p.value, "\n")
}
else{
cat("Feature", f, "is NOT enriched in breakpoint data: p =", test$p.value, "\n")
}
}
}
feature_enrichment()
source('~/Desktop/script_test/SV_Parser/script/plotBPs.r')
source('~/Desktop/script_test/SV_Parser/script/plotBPs.r')
feature_enrichment()
source('~/Desktop/script_test/SV_Parser/script/plotBPs.r')
source('~/Desktop/script_test/SV_Parser/script/plotBPs.r')
feature_enrichment()
source('~/Desktop/script_test/SV_Parser/script/plotBPs.r')
source('~/Desktop/script_test/SV_Parser/script/plotBPs.r')
source('~/Desktop/script_test/SV_Parser/script/plotBPs.r')
feature_enrichment()
source('~/Desktop/script_test/SV_Parser/script/plotBPs.r')
feature_enrichment()
source('~/Desktop/script_test/SV_Parser/script/plotBPs.r')
source('~/Desktop/script_test/SV_Parser/script/plotBPs.r')
source('~/Desktop/script_test/SV_Parser/script/plotBPs.r')
source('~/Desktop/script_test/SV_Parser/script/plotBPs.r')
source('~/Desktop/script_test/SV_Parser/script/plotBPs.r')
source('~/Desktop/script_test/SV_Parser/script/plotBPs.r')
feature_enrichment()
source('~/Desktop/script_test/SV_Parser/script/plotBPs.r')
source('~/Desktop/script_test/SV_Parser/script/plotBPs.r')
source('~/Desktop/script_test/SV_Parser/script/plotBPs.r')
source('~/Desktop/script_test/SV_Parser/script/plotBPs.r')
source('~/Desktop/script_test/SV_Parser/script/plotBPs.r')
source('~/Desktop/script_test/SV_Parser/script/plotBPs.r')
source('~/Desktop/script_test/SV_Parser/script/plotBPs.r')
feature_enrichment()
source('~/Desktop/script_test/SV_Parser/script/plotBPs.r')
feature_enrichment()
source('~/Desktop/script_test/SV_Parser/script/plotBPs.r')
source('~/Desktop/script_test/SV_Parser/script/plotBPs.r')
source('~/Desktop/script_test/SV_Parser/script/plotBPs.r')
source('~/Desktop/script_test/SV_Parser/script/plotBPs.r')
source('~/Desktop/script_test/SV_Parser/script/plotBPs.r')
source('~/Desktop/script_test/SV_Parser/script/plotBPs.r')
feature_enrichment()
source('~/Desktop/script_test/SV_Parser/script/plotBPs.r')
source('~/Desktop/script_test/SV_Parser/script/plotBPs.r')
source('~/Desktop/script_test/SV_Parser/script/plotBPs.r')
feature_enrichment()
source('~/Desktop/script_test/SV_Parser/script/plotBPs.r')
source('~/Desktop/script_test/SV_Parser/script/plotBPs.r')
feature_enrichment()
source('~/Desktop/script_test/SV_Parser/script/plotBPs.r')
p_val<-formatC(stat$p.value, digits = 3, format = "f")
cat(f, classes_count[f], feature_expect, test, sig, p_val, "\n")
feature_enrichment()
source('~/Desktop/script_test/SV_Parser/script/plotBPs.r')
feature_enrichment()
source('~/Desktop/script_test/SV_Parser/script/plotBPs.r')
feature_enrichment()
source('~/Desktop/script_test/SV_Parser/script/plotBPs.r')
, eps
source('~/Desktop/script_test/SV_Parser/script/plotBPs.r')
feature_enrichment()
source('~/Desktop/script_test/SV_Parser/script/plotBPs.r')
feature_enrichment()
source('~/Desktop/script_test/SV_Parser/script/plotBPs.r')
8538313/137547960
130216373/137547960
feature_enrichment
feature_enrichment()
genome_hits()
27771/2
50710941/137547960
35284379/137547960
source('~/Desktop/script_test/SV_Parser/script/plotBPs.r')
feature_enrichment()
17076626/137547960
50710941/137547960
50710941/168747960
35284379/168747960
17076626/137547960101421882
101421882
101421882 - 137547960
137547960 - 101421882
feature_enrichment()
feature_enrichment()
feature_enrichment()
feature_enrichment()
feature_enrichment()
feature_enrichment()
feature_enrichment()
setwd("/Users/Nick_curie/Desktop/script_test/Mutation_profiles")
library(ggplot2)
GW_snps <- read.table("GW.trinucs.txt", header = FALSE)
colnames(GW_snps)=c("tri", "trans", "freq", "sample")
ggplot(GW_snps, aes(tri,freq, group = sample)) +
geom_jitter(aes(colour = sample), size = 0.8, alpha = 0.5) +
facet_wrap(~ trans,scale="free_x") +
theme(axis.text.x = element_text(angle=45, hjust = 1))
library(ggplot2)
by_chrom <- read.table("chroms.trinucs.txt", header = FALSE)
colnames(by_chrom)=c("chrom", "tri", "trans", "freq", "sample")
c_filter <- "X"
Ch <- subset(by_chrom, chrom == c_filter)
ggplot(Ch, aes(tri,freq, group = sample)) +
geom_jitter(aes(colour = sample), size = 0.8, alpha = 0.5) +
facet_wrap(~ trans,scale="free_x") +
theme(axis.text.x = element_text(angle=45, hjust = 1)) +
ggtitle( paste( "Chromosome", c_filter))
snps<-read.table("GW.trinucs.txt", header = FALSE)
colnames(snps)=c("chroms","trans","freq")
ggplot(snps, aes(x = chroms, y = freq, group = trans, fill = chroms)) + geom_bar(position="dodge",stat="identity")+facet_wrap(~ trans )
ggplot(snps, aes(x = chroms, y = freq, group = trans, fill = chroms)) + geom_bar(position="dodge",stat="identity")+facet_wrap(~ trans )
snps<-read.table("chroms.trinucs.txt", header = FALSE)
colnames(snps)=c("chroms","trans","freq")
ggplot(snps, aes(x = chroms, y = freq, group = trans, fill = chroms)) + geom_bar(position="dodge",stat="identity")+facet_wrap(~ trans )
ggplot(snps, aes(x = trans, y = freq, group = tri, fill = tri)) + geom_bar(position="dodge",stat="identity")+facet_wrap(~ trans)
snps<-read.table("GW.trinucs.txt", header = FALSE)
colnames(snps)=c("chroms","trans","freq")
ggplot(snps, aes(x = trans, y = freq, group = tri, fill = tri)) + geom_bar(position="dodge",stat="identity")+facet_wrap(~ trans)
head(snps)
ggplot(snps, aes(x = trans, y = freq, group = tri, fill = tri)) + geom_bar(position="dodge",stat="identity")+facet_wrap(~ trans)
snps<-read.table("GW.trinucs.txt", header = FALSE)
colnames(snps)=c("chroms","trans","freq", "sample")
snps<-read.table("chroms.trinucs.txt", header = FALSE)
head(snps)
library(ggplot2)
GW_snps <- read.table("GW.trinucs.txt", header = FALSE)
colnames(GW_snps)=c("tri", "trans", "freq", "sample")
ggplot(GW_snps, aes(tri,freq, group = sample)) +
geom_jitter(aes(colour = sample), size = 0.8, alpha = 0.5) +
facet_wrap(~ trans,scale="free_x") +
theme(axis.text.x = element_text(angle=45, hjust = 1))
library(ggplot2)
by_chrom <- read.table("chroms.trinucs.txt", header = FALSE)
colnames(by_chrom)=c("chrom", "tri", "trans", "freq", "sample")
c_filter <- "X"
Ch <- subset(by_chrom, chrom == c_filter)
ggplot(Ch, aes(tri,freq, group = sample)) +
geom_jitter(aes(colour = sample), size = 0.8, alpha = 0.5) +
facet_wrap(~ trans,scale="free_x") +
theme(axis.text.x = element_text(angle=45, hjust = 1)) +
ggtitle( paste( "Chromosome", c_filter))
library(ggplot2)
GW_snps <- read.table("GW.trinucs.txt", header = FALSE)
colnames(GW_snps)=c("tri", "trans", "freq", "sample")
ggplot(GW_snps, aes(tri,freq, group = sample)) +
geom_jitter(aes(colour = sample), size = 0.8, alpha = 0.5) +
facet_wrap(~ trans,scale="free_x") +
theme(axis.text.x = element_text(angle=45, hjust = 1))
library(ggplot2)
GW_snps <- read.table("GW.trinucs.txt", header = FALSE)
colnames(GW_snps)=c("tri", "trans", "freq", "sample")
ggplot(GW_snps, aes(tri,freq, group = sample)) +
geom_jitter(aes(colour = sample), size = 1, alpha = 0.5) +
facet_wrap(~ trans,scale="free_x") +
theme(axis.text.x = element_text(angle=45, hjust = 1))
library(ggplot2)
GW_snps <- read.table("GW.trinucs.txt", header = FALSE)
colnames(GW_snps)=c("tri", "trans", "freq", "sample")
ggplot(GW_snps, aes(tri,freq, group = sample)) +
geom_jitter(aes(colour = sample), size = 1, alpha = 0.8) +
facet_wrap(~ trans,scale="free_x") +
theme(axis.text.x = element_text(angle=45, hjust = 1))
library(ggplot2)
GW_snps <- read.table("GW.trinucs.txt", header = FALSE)
colnames(GW_snps)=c("tri", "trans", "freq", "sample")
ggplot(GW_snps, aes(tri,freq, group = sample)) +
geom_jitter(aes(colour = sample), size = 1, alpha = 0.8) +
facet_wrap(~ trans,scale="free_x") +
theme(axis.text.x = element_text(angle=45, hjust = 1))
by_chrom <- read.table("chroms.trinucs.txt", header = FALSE)
colnames(by_chrom)=c("chrom", "tri", "trans", "freq", "sample")
c_filter <- "X"
Ch <- subset(by_chrom, chrom == c_filter)
ggplot(Ch, aes(tri,freq, group = sample)) +
geom_jitter(aes(colour = sample), size = 0.8, alpha = 0.5) +
facet_wrap(~ trans,scale="free_x") +
theme(axis.text.x = element_text(angle=45, hjust = 1)) +
ggtitle( paste( "Chromosome", c_filter))
snps<-read.table("GW.trinucs.txt", header = FALSE)
head(snps)
colnames(snps)=c("trinuc","trans","freq", "sample")
snps<-read.table("GW.trinucs.txt", header = FALSE)
colnames(snps)=c("tri","trans","freq", "sample")
ggplot(snps, aes(x = chroms, y = freq, group = trans, fill = chroms)) + geom_bar(position="dodge",stat="identity")+facet_wrap(~ trans )
ggplot(snps, aes(x = trans, y = freq, group = tri, fill = tri)) + geom_bar(position="dodge",stat="identity")+facet_wrap(~ trans)
ggplot(snps, aes(x = tri, y = freq, group = trans, fill = trans)) + geom_bar(position="dodge",stat="identity") + theme(axis.text.x = element_text(angle=90))
ggplot(snps, aes(x = trans, y = freq, group = tri, fill = tri)) + geom_bar(position="dodge",stat="identity")+facet_wrap(~ trans)
ggplot(snps, aes(x = tri, y = freq, group = trans, fill = sample)) + geom_bar(position="dodge",stat="identity")+facet_wrap(~ trans )
ggplot(snps, aes(x = tri, y = freq, group = trans, fill = chroms)) + ylim(0, 50) + geom_bar(position="dodge",stat="identity")+facet_wrap(~ trans ) + theme(text = element_text(size=20))
ggplot(snps, aes(x = tri, y = freq, group = trans, fill = sample)) + ylim(0, 50) + geom_bar(position="dodge",stat="identity")+facet_wrap(~ trans ) + theme(text = element_text(size=20))
source("mutation_profiles2.r")
genome_wide_snps()
chrom_wide_snps()
source('~/Desktop/script_test/Mutation_profiles/mutation_profiles2.r')
source("mutation_profiles2.r")
chrom_wide_snps()
source('~/Desktop/script_test/Mutation_profiles/mutation_profiles2.r')
source('~/Desktop/script_test/Mutation_profiles/mutation_profiles2.r')
source('~/Desktop/script_test/Mutation_profiles/mutation_profiles2.r')
chrom_wide_snps()
source('~/Desktop/script_test/Mutation_profiles/mutation_profiles2.r')
chrom_wide_snps()
source('~/Desktop/script_test/Mutation_profiles/mutation_profiles2.r')
source('~/Desktop/script_test/Mutation_profiles/mutation_profiles2.r')
source('~/Desktop/script_test/Mutation_profiles/mutation_profiles2.r')
chrom_wide_snps()
setwd("/Users/Nick_curie/Desktop/script_test/snp_data/data/allele_freqs")
setwd("../allele_freqs/data/allele_freqs/")
file<-'A512R21.dist_from_h.txt'
snps<-read.delim(file, header = T)
getwd()
list.files()
setwd("..")
list.files()
setwd("..")
list.files()
file<-'A512R21.dist_from_h.txt'
snps<-read.delim(file, header = T)
parts<-strsplit(file, '[.]')[[1]]
sample<-parts[1]
chrom2plot<-"2R"
chromosome<-subset(snps, snps$chrom  == chrom2plot )
p <- ggplot(data = chromosome, aes(x = position, y = dist_ratio), show.legend = FALSE)
p <- p + stat_smooth(aes(fill = dist_ratio), size = 0.25, alpha = 0.15, show.legend = FALSE)
p <- p + geom_point(aes(colour = -dist_ratio, text = paste("count: ", count )), show.legend = FALSE)
p <- p + ggtitle( paste( sample, chrom2plot ) )
p
