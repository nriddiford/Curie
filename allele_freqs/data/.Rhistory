if(minimum.window<=1)
{
anno.last <- anno.last+1
cnv.sub$cnv <- anno.last
}
}
}
cnv.sub
}
cnv.print <- function(cnv, file="")
{
cat('cnv', 'chromosome', 'start', 'end', 'size', 'log2', 'p.value', sep="\t", file=file,fill=TRUE, append=FALSE)
for(i in seq(max(min(cnv$cnv),1), max(cnv$cnv)))
{
sub <- subset(cnv, cnv==i)
start <- ceiling(mean(c(min(sub$start), min(sub$position))))
end <- floor(mean(c(max(sub$end), max(sub$position))))
cat(paste('CNVR_',i,sep=''), paste('chr', unique(sub$chromosome), sep=''), start, end, end-start+1, unique(sub$cnv.log2), unique(sub$cnv.p.value), sep="\t", file=file, fill=TRUE, append=TRUE)
}
}
cnv.summary <- function(cnv)
{
true <- subset(cnv, cnv>0)
max.size <- max(true$cnv.size)
min.size <- min(true$cnv.size)
count <- length(unique(true$cnv))
nt.size <- 0
for(i in unique(true$cnv)) nt.size <- nt.size + max(true[which(true$cnv==i),]$cnv.size)
mean.size <- round(nt.size/count, 0)
median.size <- median(unique(true$cnv.size))
percen <- round(100*nrow(true)/nrow(cnv),1)
cat('CNV percentage in genome: ', percen, "%\n", sep='')
cat('CNV nucleotide content:', nt.size, fill=TRUE)
cat('CNV count:', count, fill=TRUE)
cat('Mean size:', mean.size, fill=TRUE)
cat('Median size:', median.size, fill=TRUE)
cat('Max Size:', max.size, fill=TRUE)
cat('Min Size:', min.size, fill=TRUE)
}
plot.cnv.chr <- function(data, chromosome=NA, from=NA, to=NA, title=NA, ylim=c(-4,4), glim=c(NA,NA), xlabel='Position (kb)')
{
chrom.name <- chromosome
if(!is.na(chrom.name)) data <- subset(data, chromosome==chrom.name)
if(!is.na(from) & !is.na(to)) data <- subset(data, position>=from & position<=to)
if(length(unique(data$chromosome))>1) warning('More than one chromosome! use plot.cnv.all() instead?')
if(nrow(subset(data, log2>max(ylim) | log2<min(ylim)))>0) warning('missed some data points due to small ylim range')
if(is.na(glim[1])) glim[1] <- median(subset(data, log2>=0.6 & log2<=1)$p.value)
if(is.na(glim[1])) glim[1] <- quantile(data$p.value, 0.8, na.rm = T)
if(glim[1] == 0) glim[1] <- min(data$p.value[data$p.value > 0], na.rm = T)
if(is.na(glim[2])) glim[2] <- max(na.omit(data$p.value))
p <- ggplot() + geom_point(data=subset(data, p.value >= glim[1]), map=aes(x=(position/1000), y=log2, colour=p.value))
if(!is.na(from) & chrom.name == "X")
{
p <- p + annotate("rect", xmin=2940, xmax=3134, ymin=-4.5, ymax=-5, alpha=.075, fill="skyblue4")
p <- p + annotate("rect", xmin=3134, xmax=3172, ymin=-4.5, ymax=-5, alpha=.075, fill="skyblue")
p <- p + annotate("rect", xmin=3176, xmax=3343, ymin=-4.5, ymax=-5, alpha=.075, fill="slateblue")
# boi = 2,444,167..2,470,043
p <- p + annotate("text", x = 3037, y = -4.75, label="kirre", size=6)
p <- p + annotate("text", x = 3153, y = -4.75, label="notch", size=6)
p <- p + annotate("text", x = 3259, y = -4.75, label="dunce", size=6)
}
if(chrom == "X"){
p <- p + geom_vline(xintercept = 3134, colour="slateblue", alpha=.7, linetype="dotted") + geom_vline(xintercept = 3172, colour="slateblue", alpha=.7, linetype="dotted")
}
p <- p + scale_y_continuous(expression(paste(Log[2], ' ratio')), lim=ylim)
p <- p + scale_x_continuous(xlabel)
p <- p + scale_colour_gradientn(colours=c("firebrick3","violet"), limits=c(-5,5), trans='log2')
p <- p + aes(alpha=abs(log2))
p <- p + theme(legend.position="none")
temp = subset(data, p.value < min(glim))
if(nrow(temp)>0) p <- p + geom_point(data=temp, map=aes(x=(position/1000),y=log2), colour="firebrick3")
if(!is.na(title)) p$title <- "title"
p
}
args <- commandArgs()
cnv_file<-cnvs/HUM-1.TEx.nodups.hits.filt-vs-HUM-3.TEx.nodups.hits.filt.window-10000.minw-4.cnv
id<-HUM-1
chrom<-X
cat("Reading .cnv file for ", id, ": ", cnv_file, "\n", sep='')
plot_title<-paste("CNV in ", id, " on ", chrom, "\n", sep='')
read_file_in<-read.delim(cnv_file)
# Removes values of '-Inf'
clean_file<-read_file_in[!(read_file_in$log2=="-Inf"),]
clean_file<-read_file_in[!(read_file_in$log2=="Inf"),]
options("scipen"=10, "digits"=3)
# cnv.print(read_file_in)
cnv.print(read_file_in, file=paste(id, '_cnvs.txt', sep=''))
cnv.summary(read_file_in)
plot.cnv.chr(clean_file, ylim=c(-5,5), chromosome=chrom, title=plot_title)
# cnvs_outfile<-paste(id, '_cnvs.txt', sep='')
# ggsave(cnvs_outfile)
Chromosome_outfile <- paste(id, '_', chrom, '.pdf', sep='')
ggsave(Chromosome_outfile, width = 15, height = 7)
# notch locus X:2,939,623-3,408,302
if(chrom == "X"){
plot.cnv.chr(clean_file, chromosome=chrom, from=2939623, to=3408302, ylim=c(-5,5))
notch_outfile <- paste(id, '_', 'notch.pdf', sep='')
ggsave(notch_outfile, width = 15, height = 7)
}
cnvs/HUM-1.TEx.nodups.hits.filt-vs-HUM-3.TEx.nodups.hits.filt.window-10000.minw-4.cnv
source("http://bioconductor.org/biocLite.R")
library(plotly)
library(ggplot2)
library(scales)
setwd("/Users/Nick_curie/Desktop/script_test/snp_data")
file<-'A573R25.dist_from_h.txt'
snps<-read.delim(file, header = T)
parts<-strsplit(file, '[.]')[[1]]
sample<-parts[1]
#
chrom2plot<-"3R"
#
chromosome<-subset(snps, snps$chrom  == chrom2plot )
# single chrom
# ggplot
p <- ggplot(data = chromosome, aes(x = position, y = dist_ratio), show.legend = FALSE)
p <- p + stat_smooth(aes(fill = dist_ratio), size = 0.25, alpha = 0.15, show.legend = FALSE)
p <- p + geom_point(aes(colour = -dist_ratio, text = paste("count: ", count )), show.legend = FALSE)
# g <- g + scale_y_continuous(breaks = seq(0, 50, by = 10))
p <- p + ggtitle( paste( sample, chrom2plot ) )
p
g <- ggplot(data = chromosome, aes(x = position, y = dist_ratio), show.legend = FALSE)
g <- g + stat_smooth(aes(fill = dist_ratio), size = 0.25, alpha = 0.15, show.legend = FALSE)
g <- g + geom_point(aes(colour = -dist_ratio, text = paste("count: ", count )), show.legend = FALSE)
# g <- g + scale_y_continuous(breaks = seq(0, 50, by = 10))
g <- g + ggtitle( paste( sample, chrom2plot ) )
ggplotly(g)
p <- ggplot(data = chromosome, aes(x = position, y = dist_ratio), show.legend = FALSE)
p <- p + stat_smooth(aes(fill = dist_ratio), size = 0.25, alpha = 0.15, show.legend = FALSE)
p <- p + geom_point(aes(colour = -dist_ratio, text = paste("count: ", count )), show.legend = FALSE)
p <- p + facet_wrap(~chrom, scale="free_x")
p <- p + ggtitle( paste( sample ) )
p
head(snps)
p <- ggplot(data = snps, aes(x = position, y = dist_ratio), show.legend = FALSE)
p <- p + stat_smooth(aes(fill = dist_ratio), size = 0.25, alpha = 0.15, show.legend = FALSE)
p <- p + geom_point(aes(colour = -dist_ratio, text = paste("count: ", count )), show.legend = FALSE)
p <- p + facet_wrap(~chrom, scale="free_x")
p <- p + ggtitle( paste( sample ) )
p
chrom2plot<-"X"
#
chromosome<-subset(snps, snps$chrom  == chrom2plot )
g <- ggplot(data = chromosome, aes(x = position, y = dist_ratio), show.legend = FALSE)
g <- g + stat_smooth(aes(fill = dist_ratio), size = 0.25, alpha = 0.15, show.legend = FALSE)
g <- g + geom_point(aes(colour = -dist_ratio, text = paste("count: ", count )), show.legend = FALSE)
# g <- g + scale_y_continuous(breaks = seq(0, 50, by = 10))
g <- g + ggtitle( paste( sample, chrom2plot ) )
ggplotly(g)
p <- ggplot(data = chromosome, aes(x = position, y = dist_ratio), show.legend = FALSE)
p <- p + stat_smooth(aes(fill = dist_ratio), size = 0.25, alpha = 0.15, show.legend = FALSE)
p <- p + geom_line(aes(colour = -dist_ratio, text = paste("count: ", count )), show.legend = FALSE)
# g <- g + scale_y_continuous(breaks = seq(0, 50, by = 10))
p <- p + ggtitle( paste( sample, chrom2plot ) )
p
p <- ggplot(data = chromosome, aes(x = position, y = dist_ratio), show.legend = FALSE)
p <- p + stat_smooth(aes(fill = dist_ratio), size = 0.25, alpha = 0.15, show.legend = FALSE)
p <- p + geom_line(aes(colour = dist_ratio, text = paste("count: ", count )), show.legend = FALSE)
# g <- g + scale_y_continuous(breaks = seq(0, 50, by = 10))
p <- p + ggtitle( paste( sample, chrom2plot ) )
p
g <- ggplot(data = chromosome, aes(x = position, y = dist_ratio, colour = dist_ratio ), show.legend = FALSE)
g <- g + stat_smooth(aes(fill = dist_ratio), size = 0.25, alpha = 0.15, show.legend = FALSE)
g <- g + geom_line(show.legend = FALSE)
g <- g + ggtitle( paste( sample, chrom2plot ) )
ggplotly(g)
g <- ggplot(data = chromosome, aes(x = position, y = dist_ratio), show.legend = FALSE)
g <- g + stat_smooth(aes(fill = dist_ratio), size = 0.25, alpha = 0.15, show.legend = FALSE)
g <- g + geom_point(aes(colour = -dist_ratio, text = paste("count: ", count )), show.legend = FALSE)
# g <- g + scale_y_continuous(breaks = seq(0, 50, by = 10))
g <- g + ggtitle( paste( sample, chrom2plot ) )
ggplotly(g)
source("https://bioconductor.org/biocLite.R")
biocLite("MutationalPatterns")
setwd("/Users/Nick_curie/Desktop")
library(BSgenome)
available.genomes()
ref_genome<-"BSgenome.Dmelanogaster.UCSC.dm6"
biocLite(ref_genome)
library(ref_genome, character.only = TRUE)
vcf_files = list.files(your_dir, pattern = ".vcf", full.names = TRUE)
vcf_files = list.files(getwd(), pattern = ".vcf", full.names = TRUE)
head(vcf_files)
sample_names = c("Normal", "Tumour")
vcf = read_vcfs_as_granges(vcf_files[1], sample_names[1], genome = "dm6")
MutationalPatterns
MutationalPatterns()
library(MutationalPatterns)
vcf = read_vcfs_as_granges(vcf_files[1], sample_names[1], genome = "dm6")
mutations_from_vcf(vcfs[[1]])
head(vcfs)
head(vcf)
sample_names
sample_names = c("A573R31")
vcf = read_vcfs_as_granges(vcf_files[1], sample_names[1], genome = "dm6")
vcf_files = list.files(getwd(), pattern = ".vcf", full.names = TRUE)
vcf = read_vcfs_as_granges(vcf_files[1], sample_names[1], genome = "dm6")
head(vcf)
vcf <- read_vcfs_as_granges(vcf_files[1], sample_names[1], genome = "dm6")
vcf <- read_vcfs_as_granges(vcf_files[1], sample_names[1])
detectCores()
ref_genome <- "BSgenome.Hsapiens.UCSC.hg19"
library(ref_genome, character.only = TRUE)
library(MutationalPatterns)
summary(vcfs)
vcfs <- read_vcfs_as_granges(vcf_files, sample_names)
library(plotly)
library(ggplot2)
library(scales)
setwd("/Users/Nick_curie/Desktop/script_test/snp_data")
file<-'A573R25.dist_from_h.txt'
snps<-read.delim(file, header = T)
parts<-strsplit(file, '[.]')[[1]]
sample<-parts[1]
#
chrom2plot<-"X"
#
chromosome<-subset(snps, snps$chrom  == chrom2plot )
# single chrom
# ggplot
p <- ggplot(data = chromosome, aes(x = position, y = dist_ratio), show.legend = FALSE)
p <- p + stat_smooth(aes(fill = dist_ratio), size = 0.25, alpha = 0.15, show.legend = FALSE)
p <- p + geom_point(aes(colour = -dist_ratio, text = paste("count: ", count )), show.legend = FALSE)
# g <- g + scale_y_continuous(breaks = seq(0, 50, by = 10))
p <- p + ggtitle( paste( sample, chrom2plot ) )
p
g <- ggplot(data = chromosome, aes(x = position, y = dist_ratio), show.legend = FALSE)
g <- g + stat_smooth(aes(fill = dist_ratio), size = 0.25, alpha = 0.15, show.legend = FALSE)
g <- g + geom_point(aes(colour = -dist_ratio, text = paste("count: ", count )), show.legend = FALSE)
# g <- g + scale_y_continuous(breaks = seq(0, 50, by = 10))
g <- g + ggtitle( paste( sample, chrom2plot ) )
ggplotly(g)
p <- ggplot(data = snps, aes(x = position, y = dist_ratio), show.legend = FALSE)
p <- p + stat_smooth(aes(fill = dist_ratio), size = 0.25, alpha = 0.15, show.legend = FALSE)
p <- p + geom_point(aes(colour = -dist_ratio, text = paste("count: ", count )), show.legend = FALSE)
p <- p + facet_wrap(~chrom, scale="free_x")
p <- p + ggtitle( paste( sample ) )
p
file<-'A573R25.dist_from_h.txt'
snps<-read.delim(file, header = T)
parts<-strsplit(file, '[.]')[[1]]
sample<-parts[1]
#
g <- ggplot(data = snps, aes(x = position, y = freq, colour = type ), show.legend = FALSE)
g <- g + stat_smooth(aes(fill = factor(type)), size = 0.25, alpha = 0.15, show.legend = FALSE)
g <- g + geom_line()
g <- g + scale_y_continuous(breaks = seq(0, 100, by = 25))
g <- g + facet_wrap(~chrom, scale="free_x")
g <- g + ggtitle( paste( sample ) )
ggplotly(g)
p <- ggplot(data = snps, aes(x = position, y = dist_ratio), show.legend = FALSE)
p <- p + stat_smooth(aes(fill = dist_ratio), size = 0.25, alpha = 0.15, show.legend = FALSE)
p <- p + geom_point(aes(colour = -dist_ratio, text = paste("count: ", count )), show.legend = FALSE)
p <- p + facet_wrap(~chrom, scale="free_x")
p <- p + ggtitle( paste( sample ) )
ggplotly
ggplotly(p)
p
ggplotly(p)
setwd("/Users/Nick_curie/Desktop/script_test/snp_data/data/allele_freqs")
path = getwd()
file.names <- dir(path, pattern =".txt")
for(i in 1:length(file.names)){
cat("Processing", file.names[i])
snps<-read.delim(file.names[i], header = T)
parts<-strsplit(file.names[i], '[.]')[[1]]
sample<-parts[1]
p <- ggplot(data = snps, aes(x = position, y = freq, colour = type ), show.legend = FALSE)
p <- p + stat_smooth(aes(fill = factor(type)), size = 0.25, alpha = 0.15, show.legend = FALSE)
p <- p + geom_line()
p <- p + scale_y_continuous(breaks = seq(0, 100, by = 25))
p <- p + facet_wrap(~chrom, scale="free_x")
p <- p + ggtitle( paste( sample ) )
outfile <- paste(sample, '_', "allele_freqs", '.pdf', sep='')
ggsave(outfile, scale = 0.9)
}
setwd("/Users/Nick_curie/Desktop/script_test/snp_data")
file<-'A512R21.dist_from_h.txt'
snps<-read.delim(file, header = T)
parts<-strsplit(file, '[.]')[[1]]
sample<-parts[1]
p <- ggplot(data = snps, aes(x = position, y = dist_ratio), show.legend = FALSE)
p <- p + stat_smooth(aes(fill = dist_ratio), size = 0.25, alpha = 0.15, show.legend = FALSE)
p <- p + geom_point(aes(colour = -dist_ratio, text = paste("count: ", count )), show.legend = FALSE)
p <- p + facet_wrap(~chrom, scale="free_x")
p <- p + ggtitle( paste( sample ) )
p
ggplotly(p)
chrom2plot<-"2L"
#
chromosome<-subset(snps, snps$chrom  == chrom2plot )
# single chrom
# ggplot
p <- ggplot(data = chromosome, aes(x = position, y = dist_ratio), show.legend = FALSE)
p <- p + stat_smooth(aes(fill = dist_ratio), size = 0.25, alpha = 0.15, show.legend = FALSE)
p <- p + geom_point(aes(colour = -dist_ratio, text = paste("count: ", count )), show.legend = FALSE)
# g <- g + scale_y_continuous(breaks = seq(0, 50, by = 10))
p <- p + ggtitle( paste( sample, chrom2plot ) )
p
chrom2plot<-"2R"
#
chromosome<-subset(snps, snps$chrom  == chrom2plot )
# single chrom
# ggplot
p <- ggplot(data = chromosome, aes(x = position, y = dist_ratio), show.legend = FALSE)
p <- p + stat_smooth(aes(fill = dist_ratio), size = 0.25, alpha = 0.15, show.legend = FALSE)
p <- p + geom_point(aes(colour = -dist_ratio, text = paste("count: ", count )), show.legend = FALSE)
# g <- g + scale_y_continuous(breaks = seq(0, 50, by = 10))
p <- p + ggtitle( paste( sample, chrom2plot ) )
p
ls(getwd())
ls()
file.show()
list.files()
file<-"A512R21.dist_from_h.txt"
snps<-read.delim(file, header = T)
parts<-strsplit(file, '[.]')[[1]]
sample<-parts[1]
chrom2plot<-"3R"
snps$normal_var_freq<- as.numeric(gsub("%", "", snps$normal_var_freq))
snps$tumor_var_freq<- as.numeric(gsub("%", "", snps$tumor_var_freq))
chromosome<-subset(snps, snps$chrom  == chrom2plot )
# allele_ratio<-((chromosome$tumor_var_freq + 0.01)/(chromosome$normal_var_freq + 0.01))
allele_ratio<-(chromosome$tumor_var_freq/chromosome$normal_var_freq)
# ggplot
p <- ggplot(data = chromosome, aes(x = chromosome$position, y = allele_ratio))
p <- p + geom_point(aes(colour = chromosome$somatic_status), alpha=0.5)
p <- p + ggtitle( paste( sample, chrom2plot ) )
p <- p + geom_hline(yintercept=1, colour="slateblue", alpha=.7, linetype="dotted")
p
p <- ggplot(data = chromosome, aes(x = position, y = allele_ratio))
p <- p + geom_point(aes(colour = somatic_status), alpha=0.5)
p <- p + ggtitle( paste( sample, chrom2plot ) )
p <- p + geom_hline(yintercept=1, colour="slateblue", alpha=.7, linetype="dotted")
p
head(chromosome)
chromosome<-subset(snps, snps$chrom  == chrom2plot )
head(chromosome)
head(snps)
file
list.files()
list.files()
setwd("/Users/Nick_curie/Desktop/script_test/snp_data/data")
list.files()
file<-A512R23.tagged.nodups.SC_q:15_cov:20_tp:0.5.snp"
file<-"A512R23.tagged.nodups.SC_q:15_cov:20_tp:0.5.snp"
snps<-read.delim(file, header = T)
parts<-strsplit(file, '[.]')[[1]]
sample<-parts[1]
snps<-read.delim(file, header = T)
parts<-strsplit(file, '[.]')[[1]]
sample<-parts[1]
chrom2plot<-"3R"
snps$normal_var_freq<- as.numeric(gsub("%", "", snps$normal_var_freq))
snps$tumor_var_freq<- as.numeric(gsub("%", "", snps$tumor_var_freq))
chromosome<-subset(snps, snps$chrom  == chrom2plot )
# allele_ratio<-((chromosome$tumor_var_freq + 0.01)/(chromosome$normal_var_freq + 0.01))
allele_ratio<-(chromosome$tumor_var_freq/chromosome$normal_var_freq)
# ggplot
p <- ggplot(data = chromosome, aes(x = position, y = allele_ratio))
p <- p + geom_point(aes(colour = somatic_status), alpha=0.5)
p <- p + ggtitle( paste( sample, chrom2plot ) )
p <- p + geom_hline(yintercept=1, colour="slateblue", alpha=.7, linetype="dotted")
p
setwd("/Users/Nick_curie/Desktop/script_test/snp_data/data")
file<-'A512R21.tagged.nodups.SC_q:15_cov:20_tp:0.5.snp'
snps<-read.delim(file, header = T)
parts<-strsplit(file, '[.]')[[1]]
sample<-parts[1]
chrom2plot<-"3R"
snps$normal_var_freq<- as.numeric(gsub("%", "", snps$normal_var_freq))
snps$tumor_var_freq<- as.numeric(gsub("%", "", snps$tumor_var_freq))
head(snps)
allele_ratio<-((chromosome$tumor_var_freq+0.1)/(chromosome$normal_var_freq+0.1))
chromosome<-subset(snps, snps$chrom  == chrom2plot )
allele_ratio<-((chromosome$tumor_var_freq+0.1)/(chromosome$normal_var_freq+0.1))
p <- ggplot(data = chromosome, aes(x = chromosome$position, y = allele_ratio))
p <- p + geom_point(aes(colour = chromosome$somatic_status), alpha=0.5)
p <- p + ggtitle( paste( sample, chrom2plot ) )
p <- p + geom_hline(yintercept=1, colour="slateblue", alpha=.7, linetype="dotted")
p
chromosome<-subset(snps, snps$chrom  == chrom2plot )
allele_ratio<-((chromosome$tumor_var_freq)/(chromosome$normal_var_freq))
head(allele_ratio)
chromosome<-chromosome[!(allele_ratio=="-Inf"),]
chromosome<-chromosome[!(allele_ratio=="-Inf"),]
head(chromosome)
head(allele_ratio)
allele_ratio<-[!(allele_ratio=="-Inf"),]
allele_ratio<-!(allele_ratio=="-Inf"),
p <- ggplot(data = chromosome, aes(x = chromosome$position, y = allele_ratio))
allele_ratio<-!(allele_ratio=="-Inf"),
p <- ggplot(data = chromosome, aes(x = chromosome$position, y = allele_ratio))
which()
which(allele_ratio)
typeof(allele_ratio)
sapply(allele_ratio)
allele_ratio<-!(allele_ratio=="-Inf"),
filtered = chromosome[which(allele_ratio == "Inf"), ]
filtered
head(filtered)
head(allele_ratio)
head(filtered)
head(chromosome)
is.finite(allele_ratio)
allele_ratio[!is.finite(allele_ratio)] <- 0
allele_ratio[!is.finite(allele_ratio)] <- 0
m[!is.finite(m)] <- 0
allele_ratio[!is.finite(allele_ratio)] <- 0
allele_ratio[!is.finite(allele_ratio)] <- 0
head(allele_ratio)
p <- ggplot(data = chromosome, aes(x = chromosome$position, y = allele_ratio))
p <- p + geom_point(aes(colour = chromosome$somatic_status), alpha=0.5)
p <- p + ggtitle( paste( sample, chrom2plot ) )
p <- p + geom_hline(yintercept=1, colour="slateblue", alpha=.7, linetype="dotted")
p
allele_ratio[is.infinite(allele_ratio)] <- 0
p <- ggplot(data = chromosome, aes(x = chromosome$position, y = allele_ratio))
p <- p + geom_point(aes(colour = chromosome$somatic_status), alpha=0.5)
p <- p + ggtitle( paste( sample, chrom2plot ) )
p <- p + geom_hline(yintercept=1, colour="slateblue", alpha=.7, linetype="dotted")
p
p <- ggplot(data = chromosome, aes(x = position, y = allele_ratio))
p <- p + geom_point(aes(colour = somatic_status), alpha=0.5)
p <- p + ggtitle( paste( sample, chrom2plot ) )
p <- p + geom_hline(yintercept=1, colour="slateblue", alpha=.7, linetype="dotted")
p
ggplotly(p)
p <- ggplot(data = chromosome, aes(x = chromosome$position, y = allele_ratio))
p <- p + geom_point(aes(colour = chromosome$somatic_status, alpha = allele_ratio, text= paste("somatic status: ", chromosome$somatic_status, "<br>tum freq: ", chromosome$tumor_var_freq, "%", "<br>cont freq: ", chromosome$normal_var_freq, "%")))
p <- p + ggtitle( paste( sample, chrom2plot ) )
ggplotly(p)
p <- ggplot(data = chromosome, aes(x = position, y = allele_ratio))
p <- p + geom_point(aes(colour = somatic_status, alpha = 0.5, text=paste("somatic status: ", somatic_status, "<br>tum freq: ", tumor_var_freq, "%", "<br>cont freq: ", normal_var_freq, "%")))
p <- p + ggtitle( paste( sample, chrom2plot ) )
ggplotly(p)
p <- ggplot(data = chromosome, aes(x = position, y = allele_ratio))
p <- p + geom_point(aes(colour = somatic_status,
alpha = 0.5,
text  = paste("somatic status: ", somatic_status,
"<br>tum freq: "  , tumor_var_freq, "%",
"<br>cont freq: " , normal_var_freq, "%")
)
)
p <- p + ggtitle( paste( sample, chrom2plot ) )
p <- p + geom_hline(yintercept=1, colour="slateblue", alpha=.7, linetype="dotted")
ggplotly(p)
load("/Users/Nick_curie/Desktop/Microarray analysis with R/Microarray Zeng Dev.Bio 2004/E-GEOD-1744-processed-data.RData")
x
x
sampleNames
x$sampleNames
x[sampleNames]
exprs
library("Hiiragi2013")
library("latticeExtra")
library(Biobase)
exprs
x
genes = matrix(geneSet,ncol=1)
sampleNames = sampleGroup = rep(NA_character_, ncol(x))
for(i in seq(along=groups)) {
idx = groups[[i]]
sampleGroup[idx] = names(groups)[i]
sampleNames[idx] = paste(idx, names(groups)[i])
}
pData(x)$sampleGroup = sampleGroup
pData(x)$sampleColour = sampleColourMap[sampleGroup]
sampleNames(x) = sampleNames
fData(x)$ID = rownames(fData(x))
sampleNames
library("Hiiragi2013")
library("latticeExtra")
library(Biobase)
###################################################
### code chunk number 7: sampleColours1
###################################################
groups = list(
`Oocyte`      = which(x$Stage=="Oocyte"),
`Zygote`      = which(x$Stage=="Zygote"),
`2-cell`      = which(x$Stage=="2-cell"),
`8-cell`      = which(x$Stage=="8-cell"),
`Blastocyst`  = which(x$Stage=="Blastocyst"))
###################################################
### code chunk number 8: sampleColour2
###################################################
sampleColourMap = character(length(groups))
names(sampleColourMap) = names(groups)
sampleColourMap[c("Oocyte", "Zygote","2-cell","8-cell","Blastocyst")] =
brewer.pal(9, "YlOrRd")[c(1,3,5,7,9)]
stopifnot(!any(sampleColourMap==""))
###################################################
### code chunk number 9: sampleColours3
###################################################
sampleNames = sampleGroup = rep(NA_character_, ncol(x))
for(i in seq(along=groups)) {
idx = groups[[i]]
sampleGroup[idx] = names(groups)[i]
sampleNames[idx] = paste(idx, names(groups)[i])
}
pData(x)$sampleGroup = sampleGroup
pData(x)$sampleColour = sampleColourMap[sampleGroup]
sampleNames(x) = sampleNames
fData(x)$ID = rownames(fData(x))
sampleNames
fData(x)$ID
R
l
l
l
rbind
l
